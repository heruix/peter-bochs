package com.peterbochs.syntaxhighlight;

public class Keywords {
	public static String cKeywords[] = { "auto", "break", "case", "char", "const", "continue", "default", "do", "double", "else", "enum", "extern", "float", "for", "goto", "if",
			"int", "long", "register", "return", "short", "signed", "sizeof", "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while" };

	public static String cppKeywords[] = { "and", "and_eq", "alignas", "alignof", "asm", "auto", "bitand", "bitor", "bool", "break", "case", "catch", "char", "char16_t",
			"char32_t", "class", "compl", "const", "constexpr", "const_cast", "continue", "decltype", "default", "delete(1)", "double", "dynamic_cast", "else", "enum",
			"explicit (todo) ", "export", "extern (todo) ", "false", "float", "for", "friend", "goto", "if", "inline", "int", "long", "mutable", "namespace", "new", "noexcept",
			"not", "not_eq", "nullptr", "operator", "or", "or_eq", "private", "protected", "public", "register", "reinterpret_cast", "return", "short", "signed", "sizeof",
			"static", "static_assert", "static_cast", "struct", "switch", "template", "this", "thread_local", "throw", "true", "try", "typedef", "typeid", "typename", "union",
			"unsigned", "using(1)", "virtual", "void", "volatile", "wchar_t", "while", "xor", "xor_eq" };

	public static String asmKeywords = "(AAA|AAD|AAM|AAS|ADC|ADD|AND|CALL|CBW|CLC|CLD|CLI|CMC|CMP|CMPSB|CMPSW|CWD|DAA|DAS|DEC|DIV|ESC|HLT|IDIV|IMUL|IN|INC|INT|INTO|IRET|Jxx|JMP|LAHF|LDS|LEA|LES|LOCK|LODSB|LODSW|LOOP/LOOPx|MOV|MOVSB|MOVSW|MUL|NEG|NOP|NOT|OR|OUT|POP|POPF|PUSH|PUSHF|RCL|RCR|REPxx|RET|RETN|RETF|ROL|ROR|SAHF|SAL|SAR|SBB|SCASB|SCASW|SHL|SHR|STC|STD|STI|STOSB|STOSW|SUB|TEST|WAIT|XCHG|XLAT|XOR|BOUND|ENTER|PUSH|MOV|SUB|INS|IN|LEAVE|MOV|POP|OUTS|OUT|POPA|POP|PUSHA|PUSH|ARPL|CLTS|LAR|LGDT|LIDT|LLDT|LMSW|LOADALL|LSL|LTR|SGDT|SIDT|SLDT|SMSW|STR|VERR|VERW|BSF|BSR|BT|BTC|BTR|BTS|CDQ|CMPSD|CWDE|INSB|IRETx|JCXZ|LFS|LSS|LODSD|LOOPW|LOOPEW|LOOPZW|LOOPNEW|LOOPNZW|MOVSW|MOVSX|MOVZX|POPAD|POPFD|PUSHAD|PUSHFD|SCASD|SETx|SHLD|SHRD|STOSx|BSWAP|CMPXCHG|INVD|INVLPG|WBINVD|XADD|CPUID|CMPXCHG8B|RDMSR|RDTSC|WRMSR|RSM|RDPMC|SYSCALL|CMOVA|SYSEXIT|MASKMOVQ|CLFLUSH|CMPXCHG16B|LDDQU|MONITOR|CLGI|VMPTRLD|LZCNT|F2XM1|FABS|FADD|FADDP|FBLD|FBSTP|FCHS|FCLEX|FCOM|FCOMP|FCOMPP|FDECSTP|FDISI|FDIV|FDIVP|FDIVR|FDIVRP|FENI|FFREE|FIADD|FICOM|FICOMP|FIDIV|FIDIVR|FILD|FIMUL|FINCSTP|FINIT|FIST|FISTP|FISUB|FISUBR|FLD|FLD1|FLDCW|FLDENV|FLDENVW|FLDL2E|FLDL2T|FLDLG2|FLDLN2|FLDPI|FLDZ|FMUL|FMULP|FNCLEX|FNDISI|FNENI|FNINIT|FNOP|FNSAVE|FNSAVEW|FNSTCW|FNSTENV|FNSTENVW|FNSTSW|FPATAN|FPREM|FPTAN|FRNDINT|FRSTOR|FRSTORW|FSAVE|FSAVEW|FSCALE|FSQRT|FST|FSTCW|FSTENV|FSTENVW|FSTP|FSTSW|FSUB|FSUBP|FSUBR|FSUBRP|FTST|FWAIT|FXAM|FXCH|FXTRACT|FYL2X|FYL2XP1|MOVUPS|MOVSS|MOVUPS|MOVSS|MOVLPS|MOVHLPS|MOVLPS|UNPCKLPS|UNPCKHPS|MOVHPS|MOVLHPS|MOVHPS|PREFETCHNTA|PREFETCH0|PREFETCH1|PREFETCH2|NOP|MOVAPS|MOVAPS|CVTPI2PS|CVTSI2SS|MOVNTPS|CVTTPS2PI|CVTTSS2SI|CVTPS2PI|CVTSS2SI|UCOMISS|COMISS|SQRTPS|SQRTSS|RSQRTPS|RSQRTSS|RCPPS|RCPSS|ANDPS|ANDNPS|ORPS|XORPS|ADDPS|ADDSS|MULPS|MULSS|SUBPS|SUBSS|MINPS|MINSS|DIVPS|DIVSS|MAXPS|MAXSS|PSHUFW|LDMXCSR|STMXCSR|SFENCE|CMPPS|CMPSS|PINSRW|PEXTRW|SHUFPS|PMOVMSKB|PMINUB|PMAXUB|PAVGB|PAVGW|PMULHUW|MOVNTQ|PMINSW|PMAXSW|PSADBW|MASKMOVQ|ADDPD|ADDSD|ANDNPD|CMPPD|CMPSD)( |$)";
}
